#!/usr/bin/env Rscript
library("plyr");

## Shawn O'Neil, May 2014. All rights reserved,
## the author and/or any institutions the author may or may 
## not be affiliated assume no responsibility for the
## use or misuse of this program, intentional or 
## unintentional, epistemic or otherwise.
# test

## this script likes to complain about connections being closed, so I'll suppress warnings
options(warn = -1)


## Shawn O'Neil, Dec 2012
## This script performs a full outer join on a number of files using the first column of each as a common key.
## The files may have a variable number of columns, but each file must have the same number of columns represeted in each row.
## At least two files must be listed as an option, if you use '-' as a file name, the script will read one of them from standard input.
##
## Example usage: outerjoin file1 file2
## Example usage: cat file1 | outerjoin - file2
##
## This script also uses fifo() to allow the use of redirect subshells (subprocesses), 
## eg cat file1 | outerjoin - <(cat file2 | grep 'whathaveyou') file3
##
## The files need NOT be sorted, and rows will appear in the order of their first appearance in files
## (that is, the IDs in file1 will be listed first, then the unique ids in file2, then the remaining unique ids in file 3, etc.)
##
## Finally, if one or more of the files is simply an ID list, an additional column will be added with the file name ('-' in the
## case of std input, or the name of the file descriptor in the case of subprocess redirects), this will indicate the presense of the ID in the file. 
## That is to say, if you join two files:
## testa.txt:
# ID1
# ID4
# ID2
## and testb.txt
# ID6
# ID4
# ID1
## You'll get
# ID1	testa.txt	testb.txt
# ID4	testa.txt	testb.txt
# ID2	testa.txt	NA
# ID6	NA	testb.txt


fileNames = commandArgs(trailingOnly = TRUE);

leftFrame = NULL;

for(name in fileNames) {
	if(name == "-") {
		#fileFrame = as.data.frame(scan("stdin", what = character()));
		fileFrame = read.table("stdin", header=FALSE, colClasses = "character");
	} else {
		#fileFrame = as.data.frame(scan(name, what = character()));
		fileFrame = read.table(fifo(name, open="read"), header=FALSE, colClasses = "character");	
	}
	ncols = ncol(fileFrame);
	if(ncols == 1) {
		fileFrame$name = rep(name,nrow(fileFrame));
		colnames(fileFrame) = c("ID", name);
	} else {
		colnames(fileFrame) = c("ID",paste(c(2:ncols),name, sep="\t"));
	}
	if(!is.data.frame(leftFrame)) {
		leftFrame = fileFrame;
	} else{
		leftFrame = join(leftFrame, fileFrame, by="ID", type="full");
	}
	#print(fileFrame);
}	

write.table(leftFrame, quote=FALSE, col.names=FALSE, row.names=FALSE, sep="\t");
